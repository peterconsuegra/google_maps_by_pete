<%if model.persisted? %>

<%if defined? center_map_on%>
<%center_map_on_lat = center_map_on[:lat]%>
<%center_map_on_lng = center_map_on[:lng]%>
<%else%>
<%center_map_on_lat = 25.761681%>
<%center_map_on_lng = -80.191788%>
<%end%>



<div id="type-selector" class="controls">
	  <input type="radio" name="type" id="changetype-all" checked="checked">
	  <label for="changetype-all">All</label>

	  <input type="radio" name="type" id="changetype-establishment">
	  <label for="changetype-establishment">Establishments</label>

	  <input type="radio" name="type" id="changetype-address">
	  <label for="changetype-address">Addresses</label>

	  <input type="radio" name="type" id="changetype-geocode">
	  <label for="changetype-geocode">Geocodes</label>
	</div>
	
	<input id="pac-input" class="controls" type="text" placeholder="Enter a location">
	
	
	<div id="map" style="height: <%=height%>"></div>
	
	
	<script>
		
		var map;
		
		function set_location(url,lat,lng,model,model_id){
			authenticity_token = "<%=form_authenticity_token%>";
			$.ajax({
				url: url,
				dataType: 'JSON',
				type: 'POST',
				data: {lat : lat, lng: lng, model: model, model_id: model_id, authenticity_token: authenticity_token},
				success : function(result) {	
					alert("sucess!");
				}		
			});	
			
		}
		
		function addMarker(location) {
		        marker = new google.maps.Marker({
		            position: location,
		            map: map
		        });
		    }
			
		function initMap() {
			
		   map = new google.maps.Map(document.getElementById('map'), {
		    center: {
		      lat: <%=center_map_on_lat%>,
		      lng: <%=center_map_on_lng%>
		    },
		    zoom: 13
		  });
		  var input = /** @type {!HTMLInputElement} */ (
		    document.getElementById('pac-input'));

		  var types = document.getElementById('type-selector');
		  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
		  map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

		  var autocomplete = new google.maps.places.Autocomplete(input);
		  autocomplete.bindTo('bounds', map);

		  var infowindow = new google.maps.InfoWindow();
		  var marker = new google.maps.Marker({
		    map: map,
		    anchorPoint: new google.maps.Point(0, -29)
		  });

		  autocomplete.addListener('place_changed', function() {
		    infowindow.close();
		    marker.setVisible(false);
		    var place = autocomplete.getPlace();
		    if (!place.geometry) {
		      window.alert("Autocomplete's returned place contains no geometry");
		      return;
		    }

		    // If the place has a geometry, then present it on a map.
		    if (place.geometry.viewport) {
		      map.fitBounds(place.geometry.viewport);
		    } else {
		      map.setCenter(place.geometry.location);
		      map.setZoom(17); // Why 17? Because it looks good.
		    }
		    marker.setIcon(({
		      url: place.icon,
		      size: new google.maps.Size(71, 71),
		      origin: new google.maps.Point(0, 0),
		      anchor: new google.maps.Point(17, 34),
		      scaledSize: new google.maps.Size(35, 35)
		    }));
		    marker.setPosition(place.geometry.location);
		    marker.setVisible(true);

		    var address = '';
		    if (place.address_components) {
		      address = [
		        (place.address_components[0] && place.address_components[0].short_name || ''),
		        (place.address_components[1] && place.address_components[1].short_name || ''),
		        (place.address_components[2] && place.address_components[2].short_name || '')
		      ].join(' ');
		    }
			
			//Save model lat and lng
			<%if defined? model%>
				set_location("/<%=model.class.name.downcase%>s/set_location",marker.position.lat(),marker.position.lng(),"<%=model.class.name%>",<%=model.id%>)
			<%end%>

		    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
		    infowindow.open(map, marker);
		  });

		  // Sets a listener on a radio button to change the filter type on Places
		  // Autocomplete.
		  function setupClickListener(id, types) {
		    var radioButton = document.getElementById(id);
		    radioButton.addEventListener('click', function() {
		      autocomplete.setTypes(types);
		    });
		  }

		  setupClickListener('changetype-all', []);
		  setupClickListener('changetype-address', ['address']);
		  setupClickListener('changetype-establishment', ['establishment']);
		  setupClickListener('changetype-geocode', ['geocode']);
		  
		  
		 //Set model lat and lng
	 	 <% unless model.lat.nil? %>
	  	  	ModelLocation = new google.maps.LatLng(<%=model.lat%>, <%=model.lng%>);
			addMarker(ModelLocation);
	  	 <%end%>  
		  
		}
		
	</script>
	
	
	<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=<%=api_key%>&language=en&callback=initMap&libraries=places"></script>
	
<%end%>